specification {
    element system
    element component
    element microservise
    element database

    relationship async

}

model {
    frontend = component 'Frontend App' 'Пользовательский интерфейс' 'React'

    apiGateway  = component 'Api Gateway' 'API для получения данных из микросервисов'

    microservises = system 'Microservises' 'Все микросервисы программы' {
        authServise = component 'Auth servise' 'Регистрация и авторизация' 'Spring Boot'
        userServise = component 'User Servise' 'Управление пользователями' 'Spring Boot'
        flightServise = component 'Flight Servise' 'Обработка рейсов и данных о них' 'Spring Boot'
        bookingServise = component 'Booking Servise' 'Бронирование билетов' 'Spring Boot'
        notificationService = component 'Notification Servise' 'Управление уведомлениями пользователей' 'Spring Boot'
        paymentServise = component 'Payment Servise' 'Обработка плетежей' 'Spring Boot'


        flightServise -[async]-> amodeusApi 'Запрашивает данные' 'HTTP/REST'
        userServise -[async]-> usersDB 'Запрашивает данные' 'JDBC'
        flightServise -[async]-> flightsDB 'Запрашивает данные' 'JDBC'
        bookingServise -[async]-> bookingsDB 'Запрашивает данные' 'JDBC'
    }
 
    externalSystem = system 'External System' 'Сторонние системы' {
        amodeusApi = component 'Amodeus API' 'Получение данных о рейсах'
    }

    databases = system 'Databases' {
        usersDB = database 'Users Database' 'Данные пользователей' 'PostgreSQL'

        bookingsDB = database 'Booking Database' 'Данные бронирований' 'PostgreSQL'

        flightsDB = database 'Flights Database' 'Данные о рейсах' 'PostgreSQL'
    }

    frontend -[async]-> apiGateway 'Использует' 'HTTP/REST'
    apiGateway -[async]-> flightServise 'Маршрутизирует' 'HTTP/REST'
    apiGateway -[async]-> bookingServise 'Маршрутизирует' 'HTTP/REST'
    apiGateway -[async]-> notificationService 'Маршрутизирует' 'HTTP/REST'
    apiGateway -[async]-> paymentServise 'Маршрутизирует' 'HTTP/REST'
    apiGateway -[async]-> userServise 'Маршрутизирует' 'HTTP/REST'
    apiGateway -[async]-> authServise  'Маршрутизирует' 'HTTP/REST'
}

views { 
       
     
     view mainboard  {
        title 'Mainboard'
        description 'Компонентная схема сервиса покупки авиабилетов'

        include *, microservises.*, externalSystem.*, databases.*


        style microservises, externalSystem, databases {
            border dashed
            opacity 25%
            color muted
        }

        style frontend {
            shape browser
        }

        style externalSystem.amodeusApi {
            color slate
        }

        style databases.* {
            shape storage
        }
      style databases.usersDB {
        color sky
      }
      style databases.bookingsDB {
        color secondary
      }
      style databases.flightsDB {
        color secondary
      }
		autoLayout LeftRight 146 106
	}
}